name: Check Template

on:
  workflow_call:

jobs:
  check-python:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Install algokit
        # TODO: restore to algokit prior to release
        run: pipx install git+https://github.com/algorandfoundation/algokit-cli@feat/orchestration-linking

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Check formatting with Black
        run: |
          # stop the build if there are files that don't meet formatting requirements
          poetry run black --check .

      - name: Check linting with Ruff
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run ruff .

      - name: Configure git
        shell: bash
        run: |
          # set git user and email as test invoke git
          git config --global user.email "actions@github.com" && git config --global user.name "github-actions"

      - name: Run tests
        shell: bash
        run: |
          set -o pipefail
          poetry run pytest --junitxml=pytest-junit.xml -n auto

      - name: Check generated templates have been reviewed
        shell: bash
        run: |
          # Add untracked files as empty so they come up in diff
          git add -N ./examples
          # Look for changes in generated templates and error if there are any
          git diff --exit-code --minimal ./examples
