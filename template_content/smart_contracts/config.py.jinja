import dataclasses
from collections.abc import Callable

from algokit_utils import Account, ApplicationSpecification
from algosdk.v2client.algod import AlgodClient
from algosdk.v2client.indexer import IndexerClient
from beaker import Application

from smart_contracts.{{ contract_name }}.contract import app as {{ contract_name }}_app
{% if deployment_language == 'python' -%}
from smart_contracts.{{ contract_name }}.deploy_config import deploy as {{ contract_name }}_deploy
{% endif %}

@dataclasses.dataclass
class SmartContract:
    app: Application
    deploy: Callable[
        [AlgodClient, IndexerClient, ApplicationSpecification, Account], None
    ] | None = None


{% if deployment_language == 'python' -%}
# define contracts to build and/or deploy
contracts = [SmartContract(app={{ contract_name }}_app, deploy={{ contract_name }}_deploy)]
{% elif deployment_language == 'typescript' -%}
# define contracts to build
contracts = [SmartContract(app={{ contract_name }}_app)]
{% endif -%}
