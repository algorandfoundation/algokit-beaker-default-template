name: Release {{ project_name }}

on:
  workflow_call:

  {%- if not use_workspace %}
  push:
    branches:
      - main
  {%- endif %}

jobs:
  {%- if not use_workspace %}
  validate:
    name: Validate {{ project_name }}
    uses: ./.github/workflows/{% include pathjoin('includes', 'project_name_kebab.jinja') %}-ci.yaml
  {%- endif %}
  deploy-testnet:
    runs-on: "ubuntu-latest"
    {% if not use_workspace %}needs: validate{% endif %}
    environment: contract-testnet
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: Install algokit
        run: pipx install git+https://github.com/algorandfoundation/algokit-cli@feat/orchestration-linking

      - name: Bootstrap dependencies
        run: algokit bootstrap all --project-name '{{ project_name }}'

      - name: Configure git
        shell: bash
        run: |
          # set git user and email as test invoke git
          git config --global user.email "actions@github.com" && git config --global user.name "github-actions"

      - name: Deploy to testnet
        run: algokit deploy testnet --project-name '{{ project_name }}'
        env:
{%- if use_dispenser %}
          # This is the account that becomes the creator of the contract
          DEPLOYER_MNEMONIC: {% raw %}${{ secrets.DEPLOYER_MNEMONIC }}{% endraw %}
          # The dispenser account is used to ensure the deployer account is funded
          DISPENSER_MNEMONIC: {% raw %}${{ secrets.DISPENSER_MNEMONIC }}{% endraw %}
{%- else %}
          # This is the account that becomes the creator of the contract.
          # Since we are not using the optional dispenser account (via DISPENSER_MNEMONIC),
          # it must also be funded with enough Algos to deploy and fund the smart contracts created
          DEPLOYER_MNEMONIC: {% raw %}${{ secrets.DEPLOYER_MNEMONIC }}{% endraw %}
{%- endif %}
