[tool.poetry]
name = "{{ project_name }}"
version = "0.1.0"
description = "Algorand smart contracts"
authors = ["{{ author_name }} <{{ author_email }}>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
beaker-pyteal = { git = "https://github.com/algorand-devrel/beaker", branch = "v1" }

[tool.poetry.group.dev.dependencies]
{% if use_python_pip_audit -%}
pip-audit = "*"
{% endif %}
{%- if use_python_black -%}
black = {extras = ["d"], version = "*"}
{% endif %}
{%- if python_linter == 'ruff' -%}
ruff = "0.0.252"
{% endif %}
{%- if python_linter == 'flake8' -%}
flake8 = "*"
{% endif %}
{%- if use_python_mypy -%}
mypy = "*"
{% endif %}
{%- if use_python_pytest -%}
pytest = "*"
pytest-cov = "*"
{% endif %}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

{% if python_linter == 'ruff' -%}
[tool.ruff]
select = ["E", "F", "ANN", "UP", "N", "C", "B", "A", "YTT", "W", "FBT", "Q", "RUF", "I"]
ignore = ["ANN101", "C901", "F403", "F405"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Assume Python 3.10.
target-version = "py310"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true
{% endif %}

{% if use_python_pytest -%}
[tool.pytest.ini_options]
pythonpath = [".", "tests"]
{% endif %}

{% if use_python_mypy -%}
[tool.mypy]
files = "./"
python_version = "3.10"
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_untyped_defs = false
strict_equality = true
{% endif %}
