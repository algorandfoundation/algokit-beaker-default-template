[tool.poetry]
name = "template_content"
version = "0.1.0"
description = ""
authors = ["MakerX <cto@makerx.com.au>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
beaker-pyteal = "^1.0.0"
algokit-utils = "^1.3"
python-dotenv = "^1.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
black = {extras = ["d"], version = "^22.10.0"}
flake8 = "^6.0.0"
pytest = "^7.2.2"
mypy = "^1.1.1"
pre-commit = "^3.2.1"
types-pyyaml = "^6.0.12.9"
pytest-xdist = "^3.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
  "E",
  "F",
  "ANN",
  "UP",
  "N",
  "C4",
  "B",
  "A",
  "YTT",
  "W",
  "FBT",
  "Q",
  "RUF",
  "I",
]
extend-exclude = [
  "tests_generated/*", # Ignoring generated tests, ruff specific errors are to be caught by pytest
  "template_content",
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ]
ignore = [
  "ANN101", # no type for self
  "ANN102", # no type for cls
  "RET505", # allow else after return
  "SIM108", # allow if-else in place of ternary
  "E111", # indentation is not a multiple of four
  "E117", # over-indented
  "ISC001", # single line implicit string concatenation
  "ISC002", # multi line implicit string concatenation
  "Q000", # bad quotes inline string
  "Q001", # bad quotes multiline string
  "Q002", # bad quotes docstring
  "Q003", # avoidable escaped quotes
  "W191", # indentation contains tabs
]
unfixable = ["B", "RUF"]

[tool.pytest.ini_options]
pythonpath = ["tests"]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
allow_untyped_defs = false
strict_equality = true
